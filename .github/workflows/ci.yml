name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install deps (pnpm)
        run: pnpm -w install
      - name: Lint
        run: pnpm -w run lint || echo "no linters configured yet"

  typecheck:
    name: typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install deps (pnpm)
        run: pnpm -w install
      - name: Typecheck
        run: pnpm -w run typecheck || echo "no typechecks configured yet"

  build:
    name: build
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install deps (pnpm)
        run: pnpm -w install
      - name: Build
        run: pnpm -w run build

  vulnerability_scan:
    name: vulnerability_scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install deps (pnpm)
        run: pnpm -w install
      - name: Node audit (prod only, high severity; warn-only)
        run: pnpm audit --prod --audit-level=high || echo "audit warnings ignored at scaffold stage"
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Python audit (pip-audit; skip if no requirements files)
        run: |
          python -m pip install --upgrade pip pip-audit
          REQS=$(git ls-files "*requirements*.txt" || true)
          if [ -n "$REQS" ]; then
            set -e
            for f in $REQS; do echo "auditing $f"; pip-audit -r "$f" || true; done
          else
            echo "No Python requirements files found; skipping pip-audit."
          fi
