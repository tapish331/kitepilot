name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install deps (pnpm)
        run: pnpm -w install
      - name: Lint
        run: pnpm -w run lint || echo "no linters configured yet"

  typecheck:
    name: typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install deps (pnpm)
        run: pnpm -w install
      - name: Typecheck
        run: pnpm -w run typecheck || echo "no typechecks configured yet"
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install API dev deps
        run: |
          python -m pip install --upgrade pip
          pip install -e apps/api[dev]
          pip install -e packages/feature-lib
          pip install -e packages/strategy-kit
          pip install -e packages/risk-lib[dev]
          pip install -e apps/risk-svc[dev]
      - name: mypy (apps/api, feature-lib & strategy-kit)
        run: |
          mypy apps/api
          mypy packages/feature-lib
          mypy packages/strategy-kit
          mypy packages/risk-lib/kitepilot_risk
          mypy apps/risk-svc/src
          ruff check packages/common packages/feature-lib packages/strategy-kit packages/risk-lib apps/api apps/risk-svc

  build:
    name: build
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install deps (pnpm)
        run: pnpm -w install
      - name: Build
        run: pnpm -w run build

  vulnerability_scan:
    name: vulnerability_scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install deps (pnpm)
        run: pnpm -w install
      - name: Node audit (prod only, high severity; warn-only)
        run: pnpm audit --prod --audit-level=high || echo "audit warnings ignored at scaffold stage"
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Python audit (pip-audit; skip if no requirements files)
        run: |
          python -m pip install --upgrade pip pip-audit
          REQS=$(git ls-files "*requirements*.txt" || true)
          if [ -n "$REQS" ]; then
            set -e
            for f in $REQS; do echo "auditing $f"; pip-audit -r "$f" || true; done
          else
            echo "No Python requirements files found; skipping pip-audit."
          fi


  unit_tests:
    name: unit_tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install packages
        run: |
          python -m pip install --upgrade pip
          pip install -e packages/common
          pip install -e apps/api[dev]
          pip install -e packages/feature-lib
          pip install -e packages/strategy-kit
          pip install -e packages/risk-lib[dev]
          pip install -e apps/risk-svc[dev]
      - name: pytest (packages and api)
        run: |
          pytest -q packages/common packages/common/tests
          pytest -q packages/feature-lib/tests
          pytest -q packages/strategy-kit/tests
          pytest -q apps/api/tests/unit
          pytest -q packages/risk-lib/tests
          pytest -q apps/risk-svc/tests
  integration_tests:
    name: integration_tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install API dev deps
        run: |
          python -m pip install --upgrade pip
          pip install -e apps/api[dev]
      - name: Enable Docker for Testcontainers
        run: |
          echo "TESTCONTAINERS_RYUK_DISABLED=true" >> $GITHUB_ENV
      - name: Run integration tests (apps/api)
        run: pytest -q apps/api/tests/integration

  contract:
    name: contract
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install packages
        run: |
          python -m pip install --upgrade pip wheel
          pip install -e packages/broker-adapter
          pip install -e apps/broker-svc
          pip install pytest pytest-cov
      - name: Run contract tests
        run: |
          pytest -q packages/broker-adapter/tests/contract
          pytest -q apps/broker-svc/tests/contract
